C=============================================================================
C  файл GENKNG.for
C  Содержит подпрограммы GENKNG, FINDADJ
C  Вызывается из модуля RENMDD
C  Вызывает модуль FNROOT  
C             Парамонов М.В. - 2012 -      
c-----------------------------------------------------------------------------
c       Алгоритм Кинга (профильный метод определение вектора перестановки узлов графа)
C-----------------------------------------------------------------------------        
C  Входные данные:
C          NP - количество узлов
C          XADJ, ADJNCY - структура смежности графа
C  Выходные данные:
C           Perm - вектор перестановки  
C-----------------------------------------------------------------------------
C  Описание работы алгоритм:
C  Выбираем вершину, имеющую минимальную степень, и присваиваем ей номер 1.
C  Множество вершин разбивается теперь на три подмножества: А, В к С. Множество
C  А состоит из всех уже пронумерованных вершин графа. Множество В определяется
C  как смежное по отношению к А, т. е. В = Adj (А) и, таким образом, состоит из
C  всех вершин, которые смежны какой-либо вершине из А. Множество С состоит из 
C  всех остальных вершин. Тогда на каждом шаге алгоритма следующей нумеруется 
C  та вершина подмножества В, которая ведет к присоединению наименьшего 
C  количества вершин из С к множеству В. После того как очередная вершина 
C  выбрана, производится соответствующее переопределение множеств А, В и С. 
C-----------------------------------------------------------------------------
        SUBROUTINE GENKNG (NP,XADJ,ADJNCY,PERM)
        INTEGER NP,XADJ(1),ADJNCY(1),PERM(1)
        INTEGER I,J,BN
        INTEGER NODE,MINNODE,ABC(NP)
        INTEGER ROOT,MASK(50000),NLVL,XLS(5000)
C-----------------------------------------------------------------------------
C      ROOT - псевдопереферийный узел (начальный узел)
C      ABC - маска принадлежности узла i к подмножествам ( если ABC(i)=1, то i 
C          узел в подмножестве A; если ABC(i)=2, то в B; если ABC(i)=3, то в C)     
C      NODE - очередной пронумерованный узел
C      PMIN - узел с меньшим номером из пары узлов приводящих к максимальной ширине ленты        
C      BN - кол-во смежных узлов из множества C (перемещаются в В при нумерации очередного узла
C-----------------------------------------------------------------------------        
C-----------------------------------------------------------------------------
C       Инициализация массива принадлежности к множествам и выбор узла                                                                               
        DO I=1,NP
           ABC(I)=3    !все узлы в множестве C
           MASK(I)=1   !маска, определяющая подграф в котором ищется псевдопереферийный узел, ищем во всем графе
        ENDDO
        ! поиск псевдопереферийного узла, его нумеруем первым
        ROOT=1
        CALL FNROOT ( ROOT,XADJ,ADJNCY,MASK,NLVL,XLS,PERM(1))        
        NODE=ROOT
        print*,root
        ABC(NODE)=1   !переносим в множество A из множества C
        J=1 
        PERM(J)=NODE  !помещаем в вектор перестановки как первый узел
        J=J+1
C-----------------------------------------------------------------------------      
C       Цикл по узлам
        DO 100 K=1,NP-1  !пробегаем по всем узлам (np-1, т.к. первый уже помечен)
C       Выбор смежных узлов из множества С        
        CALL FINDADJ(NODE,ABC,BN,XADJ,ADJNCY,1)      
        MINNTA=1000      
C       Цикл по смежным узлам для поиска с наимеьшим числом смежных вершин из С        
        DO I=1,NP
           IF (ABC(I).eq.2) THEN  !выбираем узел из множества В - все смежные узлы с множеством A
                BN=0
                CALL FINDADJ(I,ABC,BN,XADJ,ADJNCY,2) !считаем кол-во смежных узлов, которые находятся в C
                                                     ! для выбранного узла из B
C               Запоминаем с мин числом                
                IF (BN.LE.MINNTA) THEN                  
                   MINNTA=BN
                   NODE=I
                ENDIF                   
           ENDIF
        ENDDO         
        ABC(NODE)=1       !нумеруем узел с наименьшим числом смежных
        PERM(J)=NODE      !заносим в вектор перестановки
        J=J+1
100     CONTINUE
C-----------------------------------------------------------------------------    
        RETURN
        END
C-----------------------------------------------------------------------------
C-----------------------------------------------------------------------------
C      Подпрограмма преберает смежные с i-тым узлом вершины
C      работает в 2 режимах:
C      если FLAG=1, то переносит все смежные узлы из мн-ва С в  мн-во B
C      если FLAG=2, то считает кол-во смежных вершин из мн-ва С для i-того узла       
        SUBROUTINE FINDADJ(NODE,B,BN,XADJ,ADJNCY,FLAG)
        INTEGER NODE,B(1),XADJ(1),ADJNCY(1) ,BN ,FLAG
        !выбираем смежные узлы из структуры смежности для i-того узла
        IF((XADJ(NODE+1)-1).LT.(XADJ(NODE))) GOTO 300
        DO 200 I=XADJ(NODE),XADJ(NODE+1)-1
           IF (FLAG.EQ.1) THEN 
              IF (B(ADJNCY(I)).EQ.3) B(ADJNCY(I))=2
           ELSE
              IF (B(ADJNCY(I)).EQ.3) BN=BN+1
           ENDIF   
200     CONTINUE
300     RETURN
        END
C-----------------------------------------------------------------------------
C==============================================================================
C  конец файла GENKNG.for         
